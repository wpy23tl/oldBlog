<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wpy.blog.dao.BlogDao">
	<resultMap type="Blog" id="BlogResult">
		<result property="id" column="id"/>
		<result property="blogTitle" column="blog_title"/>
		<result property="blogContent" column="blog_content"/>
		<result property="createTime" column="create_time"/>
		<result property="updateTime" column="update_time"/>
		<result property="blogTypeId" column="blogtype_id"/>
		<result property="blogTypeName" column="blogTypeName"/>
		<result property="summary" column="summary"/>
		<result property="clickHit" column="clickHit"/>
		<result property="recommendFlag" column="recommendFlag"/>
		<result property="recommendNo" column="recommendNo"/>
		<result property="bannerName" column="bannerName"/>
		<result property="articlePictureViewId" column="articlePictureViewId"/>
	</resultMap>
	
	
	
	<select id="selectByPrimaryKey" parameterType="Integer" resultMap="BlogResult">
		select * from tb_blog where id=#{id}
	</select>
	
	<select id="selectAll" parameterType="Map" resultMap="BlogResult">
		SELECT obj.*,bt.blogTypeName,pic.path FROM `tb_blog` obj LEFT JOIN tb_blogtype  bt ON obj.blogtype_id = bt.id  LEFT JOIN tb_picture pic ON obj.articlePictureViewId = pic.id
		<where>
			<if test="blogTypeId !=null and blogTypeId !='' ">
				and blogtype_id = #{blogTypeId}
			</if>
		</where>
		order by create_time desc
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
	</select>
	<!-- 获取上一篇博客 -->
	<select id="getLastBlog" parameterType="Integer" resultMap="BlogResult">
		SELECT * FROM tb_blog WHERE id&gt;#{id} order by id ASC LIMIT 1
	</select>
	<!-- 获取下一篇博客 -->
	<select id="getNextBlog" parameterType="Integer" resultMap="BlogResult">
		SELECT * FROM tb_blog WHERE id&lt;#{id} order by id DESC LIMIT 1
	</select>
	
	<select id="getTotalCount"  resultType="Integer">
		select count(id) from tb_blog 
	</select>
	
	<delete id="deleteByPrimarKey" parameterType="Integer">
		delete from tb_blog where id=#{id}
	</delete>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="Blog">
		insert into tb_blog values(null,#{blogTitle},#{blogContent},now(),null,#{blogTypeId},#{summary},0,0,0,'',0,#{articlePictureViewId})
	</insert>
	
	<update id="updateByPrimaryKey" parameterType="Blog" >
		update tb_blog set blog_title=#{blogTitle},blog_content=#{blogContent},create_time=#{createTime},update_time=#{updateTime},blogtype_id=#{blogTypeId},summary=#{summary},clickHit=#{clickHit},recommendFlag=#{recommendFlag},recommendNo=#{recommendNo},bannerName=#{bannerName},bannerFlag=#{bannerFlag},articlePictureViewId=#{articlePictureViewId}  where id=#{id}
	</update>
	<select id="getRankByClickHit"  resultMap="BlogResult">
		SELECT * FROM `tb_blog`  order by clickHit desc,id desc limit 6
	</select>
	<select id="getRankByCreateTime"  resultMap="BlogResult">
		SELECT * FROM `tb_blog`  order by create_time desc,id desc limit 6
	</select>
	<select id="getRankByRandom"  resultMap="BlogResult">
		SELECT * FROM `tb_blog`  order by rand() limit 6
	</select>
	<select id="selectBloggerRecommend" parameterType="Map" resultMap="BlogResult">
		SELECT obj.*,bt.blogTypeName FROM `tb_blog` obj LEFT JOIN tb_blogtype  bt ON obj.blogtype_id = bt.id where obj.recommendFlag=1 order by obj.recommendNo asc
		
	</select>
	<select id="selectBanner"  resultMap="BlogResult">
		SELECT obj.*,bt.blogTypeName FROM `tb_blog` obj LEFT JOIN tb_blogtype  bt ON obj.blogtype_id = bt.id where obj.bannerFlag=1

	</select>
</mapper>